name: Quality Gates

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run backend tests
        run: cd apps/api && npm test
        env:
          NODE_ENV: test

      - name: Check backend coverage
        run: cd apps/api && npm test -- --coverage --coverageThreshold='{"global":{"branches":70,"functions":70,"lines":70}}'
        env:
          NODE_ENV: test

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run frontend tests
        run: cd apps/web && npm test
        env:
          NODE_ENV: test

      - name: Check calculation coverage
        run: cd apps/web && npm test -- --coverage --coverageThreshold='{"./src/utils/opportunityCalculations.ts":{"branches":85,"functions":85,"lines":85}}'
        env:
          NODE_ENV: test

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        run: npm run lint

  build:
    name: Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build backend
        run: cd apps/api && npm run build

      - name: Build frontend
        run: cd apps/web && npm run build

  quality-summary:
    name: Quality Gate Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, lint, build]
    if: always()

    steps:
      - name: Check all jobs passed
        run: |
          if [[ "${{ needs.backend-tests.result }}" != "success" ]] || \
             [[ "${{ needs.frontend-tests.result }}" != "success" ]] || \
             [[ "${{ needs.lint.result }}" != "success" ]] || \
             [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "❌ Quality gates FAILED"
            echo "Backend Tests: ${{ needs.backend-tests.result }}"
            echo "Frontend Tests: ${{ needs.frontend-tests.result }}"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Build: ${{ needs.build.result }}"
            exit 1
          else
            echo "✅ All quality gates PASSED"
          fi
